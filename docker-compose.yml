version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx    
    volumes:
    - ./templates:/etc/nginx/templates
    - ./dockerConfig/nginx-default.conf:/etc/nginx/conf.d/default.conf
    ports:
    - 8000:80

  postgresql-master:
    image: bitnami/postgresql
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgresql_master_data:/bitnami/postgresql
      - ./dockerConfig/postgres-dev-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=development_database
      - ALLOW_EMPTY_PASSWORD=yes

  postgresql-slave-1:
    image: bitnami/postgresql
    restart: always
    ports:
      - '5433:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes

  postgresql-slave-2:
    image: bitnami/postgresql
    restart: always
    ports:
      - '5434:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes

  projetosid-1:
    container_name: app-node1
    restart: always
    build:
      context: .
      target: dependencies
    environment:
      - PORT=3333
      - NODE=1
    ports:
      - 3333:3333
    env_file:
      - .env
    volumes:
      - ./:/home/node/app
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"

  projetosid-2:
    container_name: app-node2
    restart: always
    build:
      context: .
      target: dependencies
    environment:
      - PORT=3334
      - NODE=2
    ports:
      - 3334:3334
    env_file:
      - .env    
    volumes:
      - ./:/home/node/app
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"  

  projetosid-3:
    container_name: app-node3
    restart: always
    build:
      context: .
      target: dependencies
    environment:
      - PORT=3335
      - NODE=3
    ports:
      - 3335:3335
    env_file:
      - .env    
    volumes:
      - ./:/home/node/app
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"

volumes:
  postgresql_master_data:
    driver: local